-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS "Gym"."Finanace"
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    description text COLLATE pg_catalog."default",
    client_name character varying COLLATE pg_catalog."default" DEFAULT '  '::character varying,
    img text COLLATE pg_catalog."default",
    cost double precision NOT NULL,
    id_type bigint NOT NULL,
    date timestamp with time zone,
    CONSTRAINT "Finanace_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Gym"."Product_Price"
(
    qty bigint NOT NULL,
    product_id bigint NOT NULL,
    date timestamp with time zone,
    total_price double precision,
    unit_price double precision,
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    total_qty bigint,
    CONSTRAINT pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Gym"."Product_Transactions"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    qty bigint NOT NULL,
    product_id bigint NOT NULL,
    total_price bigint,
    date timestamp with time zone,
    type bigint,
    CONSTRAINT "Product_Transactions_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Gym"."Product_Transactions_type"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Product_Transactions_type_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Gym"."Products"
(
    name character varying COLLATE pg_catalog."default" NOT NULL,
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    serial character varying COLLATE pg_catalog."default",
    availble bigint,
    price double precision,
    CONSTRAINT "Products_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Gym".finance_types
(
    id bigint NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT finance_types_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Gym".sports
(
    id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 32767 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT sports_key PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Gym".user_type
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT type_key PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS "Gym".users
(
    id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 32767 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    email character varying COLLATE pg_catalog."default",
    phone character varying COLLATE pg_catalog."default",
    birth_day date,
    qr_code text COLLATE pg_catalog."default" NOT NULL,
    id_user_type bigint,
    reg_start_date date,
    reg_end_date date,
    classes_num bigint,
    qr_code_name character varying COLLATE pg_catalog."default",
    id_sport bigint,
    cost double precision,
    img text COLLATE pg_catalog."default",
    CONSTRAINT user_key PRIMARY KEY (id),
    CONSTRAINT uniqe_qr UNIQUE (qr_code)
);

CREATE TABLE IF NOT EXISTS "Gym".users_log
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id bigint NOT NULL,
    "time" timestamp with time zone NOT NULL,
    CONSTRAINT users_log_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS "Gym"."Product_Price"
    ADD CONSTRAINT fk_product FOREIGN KEY (product_id)
    REFERENCES "Gym"."Products" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

COMMENT ON CONSTRAINT fk_product ON "Gym"."Product_Price"
    IS 'c';



ALTER TABLE IF EXISTS "Gym"."Product_Transactions"
    ADD CONSTRAINT fk_product_id FOREIGN KEY (product_id)
    REFERENCES "Gym"."Products" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Gym"."Product_Transactions"
    ADD CONSTRAINT fk_type FOREIGN KEY (type)
    REFERENCES "Gym"."Product_Transactions_type" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS "Gym".users
    ADD CONSTRAINT fk_sport_id FOREIGN KEY (id_sport)
    REFERENCES "Gym".sports (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS "Gym".users
    ADD CONSTRAINT user_type_fk FOREIGN KEY (id_user_type)
    REFERENCES "Gym".user_type (id) MATCH FULL
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS "Gym".users_log
    ADD CONSTRAINT fk_user FOREIGN KEY (user_id)
    REFERENCES "Gym".users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;